PSUADE_IO (Note : inputs not true inputs if pdf ~=U)
2 1 90
1 1
  8.8116666666666665e-01
  4.3049999999999999e-01
  5.5774501034411150e-01
2 1
  6.8850000000000000e-01
  4.0550000000000003e-01
  0.0000000000000000e+00
3 1
  5.3849999999999998e-01
  2.3983333333333334e-01
  0.0000000000000000e+00
4 1
  9.3183333333333329e-01
  6.2166666666666669e-02
 -8.4151088622110137e-01
5 1
  9.7083333333333333e-01
  1.9650000000000001e-01
 -7.9335318802936305e-01
6 1
  3.5916666666666669e-01
  9.3166666666666662e-02
  0.0000000000000000e+00
7 1
  3.0449999999999999e-01
  7.6833333333333337e-02
  0.0000000000000000e+00
8 1
  4.4450000000000001e-01
  3.5316666666666668e-01
  0.0000000000000000e+00
9 1
  1.9516666666666665e-01
  4.0949999999999998e-01
  0.0000000000000000e+00
10 1
  9.6833333333333327e-02
  2.4216666666666667e-01
  0.0000000000000000e+00
11 1
  1.2516666666666668e-01
  5.5583333333333329e-01
  0.0000000000000000e+00
12 1
  1.8883333333333333e-01
  7.0750000000000002e-01
  0.0000000000000000e+00
13 1
  4.4516666666666665e-01
  6.4616666666666667e-01
  0.0000000000000000e+00
14 1
  3.3316666666666667e-01
  8.6550000000000005e-01
  8.8376558521483517e-01
15 1
  1.8183333333333335e-01
  9.0549999999999997e-01
 -1.7192925244211874e-01
16 1
  5.9716666666666662e-01
  8.9016666666666666e-01
  3.0403293516159535e-01
17 1
  8.6883333333333335e-01
  9.2249999999999999e-01
  1.8056404417546978e-01
18 1
  8.2883333333333331e-01
  7.2916666666666663e-01
  7.8693504800946956e-01
19 1
  7.3416666666666663e-01
  5.6316666666666670e-01
  0.0000000000000000e+00
20 1
  5.7350000000000001e-01
  7.0583333333333331e-01
  0.0000000000000000e+00
21 1
  9.9983333333333335e-01
  4.4016666666666665e-01
 -5.2356712590338403e-03
22 1
  7.7316666666666667e-01
  1.6666666666666666e-04
  0.0000000000000000e+00
23 1
  8.4483333333333333e-01
  1.1950000000000000e-01
  9.8685572701457280e-01
24 1
  6.0383333333333333e-01
  1.6666666666666666e-04
  0.0000000000000000e+00
25 1
  1.6666666666666666e-04
  8.1983333333333330e-01
  5.8354123493741661e-01
26 1
  1.6666666666666666e-04
  9.9983333333333335e-01
 -5.2356712590338403e-03
27 1
  6.7983333333333329e-01
  9.9983333333333335e-01
 -5.2356712590338403e-03
28 1
  8.0716666666666670e-01
  9.9983333333333335e-01
  2.1801445497982461e-01
29 1
  9.9983333333333335e-01
  7.1383333333333332e-01
 -5.2356712590338403e-03
30 1
  7.9483333333333328e-01
  8.1550000000000000e-01
  4.6792983431637991e-01
31 1
  9.9983333333333335e-01
  4.4050000000000000e-01
 -5.2356712590338403e-03
32 1
  8.2883333333333331e-01
  1.6666666666666666e-04
  7.8693504800946956e-01
33 1
  9.9983333333333335e-01
  1.9416666666666665e-01
 -5.2356712590338403e-03
34 1
  9.9983333333333335e-01
  9.9983333333333335e-01
 -1.0471342518067681e-02
35 1
  9.9983333333333335e-01
  8.6583333333333334e-01
  8.7358139541116031e-01
36 1
  9.9983333333333335e-01
  3.0583333333333335e-01
 -5.2356712590338403e-03
37 1
  8.2883333333333331e-01
  1.9150000000000000e-01
  7.8693504800946956e-01
38 1
  8.4483333333333333e-01
  8.8649999999999995e-01
  1.3983699701951686e+00
39 1
  8.5783333333333334e-01
  6.2483333333333335e-01
  9.6987199465690976e-01
40 1
  8.2883333333333331e-01
  6.5216666666666667e-01
  7.8693504800946956e-01
41 1
  9.3183333333333329e-01
  1.6666666666666666e-04
 -8.4151088622110137e-01
42 1
  9.3183333333333329e-01
  1.8350000000000000e-01
 -8.4151088622110137e-01
43 1
  2.6950000000000002e-01
  8.6550000000000005e-01
  8.8376558521483517e-01
44 1
  9.1849999999999998e-01
  8.4183333333333332e-01
  4.1824480531067421e-01
45 1
  9.3183333333333329e-01
  4.2283333333333334e-01
 -8.4151088622110137e-01
46 1
  9.3183333333333329e-01
  5.6316666666666670e-01
 -8.4151088622110137e-01
47 1
  9.3183333333333329e-01
  1.9416666666666665e-01
 -8.4151088622110137e-01
48 1
  9.7083333333333333e-01
  9.3816666666666670e-01
 -1.7250444890970216e+00
49 1
  9.7083333333333333e-01
  7.9749999999999999e-01
 -7.9335318802936305e-01
50 1
  9.7083333333333333e-01
  6.6983333333333328e-01
 -7.9335318802936305e-01
51 1
  9.7083333333333333e-01
  1.0650000000000000e-01
 -7.9335318802936305e-01
52 1
  4.4883333333333331e-01
  7.9749999999999999e-01
  0.0000000000000000e+00
53 1
  3.5816666666666669e-01
  9.0549999999999997e-01
 -1.7192925244211874e-01
54 1
  2.3716666666666666e-01
  9.0549999999999997e-01
 -1.7192925244211874e-01
55 1
  5.6450000000000000e-01
  8.9449999999999996e-01
  1.7192896398200336e-01
56 1
  1.6666666666666666e-04
  9.0549999999999997e-01
 -1.7192925244211874e-01
57 1
  4.6350000000000002e-01
  9.0549999999999997e-01
 -1.7192925244211874e-01
58 1
  7.3416666666666663e-01
  9.0549999999999997e-01
 -1.7192925244211874e-01
59 1
  8.0716666666666670e-01
  9.0549999999999997e-01
  5.1320873796739719e-02
60 1
  9.7083333333333333e-01
  1.6666666666666666e-04
 -7.9335318802936305e-01
61 1
  6.9450000000000001e-01
  8.6550000000000005e-01
  8.8376558521483517e-01
62 1
  9.1249999999999998e-01
  9.9983333333333335e-01
 -3.8791925579768427e-01
63 1
  7.3833333333333334e-02
  8.3250000000000002e-01
  8.5264018921630580e-01
64 1
  9.3183333333333329e-01
  9.9983333333333335e-01
 -8.4674655748013516e-01
65 1
  3.5583333333333333e-01
  8.6550000000000005e-01
  8.8376558521483517e-01
66 1
  8.4483333333333333e-01
  8.3950000000000002e-01
  1.9329411045749187e+00
67 1
  9.3183333333333329e-01
  8.6550000000000005e-01
  4.2254698993733797e-02
68 1
  1.3850000000000001e-01
  8.4183333333333332e-01
  9.6726776831810957e-01
69 1
  7.4499999999999997e-02
  8.6550000000000005e-01
  8.8376558521483517e-01
70 1
  7.7316666666666667e-01
  8.6550000000000005e-01
  8.8376558521483517e-01
71 1
  3.5783333333333334e-01
  9.2483333333333329e-01
 -7.0339483272241532e-01
72 1
  2.6816666666666666e-01
  9.2249999999999999e-01
 -6.4944818471088539e-01
73 1
  1.5550000000000000e-01
  9.2249999999999999e-01
 -6.4944818471088539e-01
74 1
  6.1016666666666663e-01
  9.2249999999999999e-01
 -6.4944818471088539e-01
75 1
  8.6883333333333335e-01
  7.2916666666666663e-01
  8.3001222888635517e-01
76 1
  8.6883333333333335e-01
  6.1499999999999999e-02
  8.3001222888635517e-01
77 1
  8.6883333333333335e-01
  2.8583333333333333e-01
  8.3001222888635517e-01
78 1
  3.8883333333333331e-01
  9.2249999999999999e-01
 -6.4944818471088539e-01
79 1
  4.7849999999999998e-01
  9.2249999999999999e-01
 -6.4944818471088539e-01
80 1
  8.4483333333333333e-01
  9.2249999999999999e-01
  3.3740754230368741e-01
81 1
  8.0716666666666670e-01
  5.3416666666666668e-01
  2.2325012623885845e-01
82 1
  6.8983333333333330e-01
  8.1550000000000000e-01
  4.6792983431637991e-01
83 1
  8.0716666666666670e-01
  3.0249999999999999e-01
  2.2325012623885845e-01
84 1
  8.0383333333333329e-01
  8.2450000000000001e-01
  8.1604966675824997e-01
85 1
  8.0649999999999999e-01
  7.3383333333333334e-01
  2.0278730467544487e-01
86 1
  5.8816666666666662e-01
  8.1950000000000001e-01
  5.7500527540144386e-01
87 1
  8.0449999999999999e-01
  8.8516666666666666e-01
  5.9022012567932203e-01
88 1
  8.0716666666666670e-01
  3.8500000000000000e-02
  2.2325012623885845e-01
89 1
  8.0716666666666670e-01
  3.5116666666666668e-01
  2.2325012623885845e-01
90 1
  8.0716666666666670e-01
  9.9283333333333335e-01
  2.8542998412039999e-07
PSUADE_IO
PSUADE
INPUT
   dimension = 2
   variable 1 X1  =   0.0000000000000000e+00   1.0000000000000000e+00
   variable 2 X2  =   0.0000000000000000e+00   1.0000000000000000e+00
#  PDF <inpNum> N  <mean> <std>
#  PDF <inpNum> L  <logmean> <std>
#  PDF <inpNum> T  <center> <halfbasewidth>
#  PDF <inpNum> B  <alpha> <beta>
#  PDF <inpNum> G  <alpha> <beta>
#  PDF <inpNum> W  <lambda> <K>
#  PDF <inpNum> IG <alpha> <beta>
#  PDF <inpNum> C  <X0> <gamma>
#  PDF <inpNum> E  <lambda>
#  PDF <inpNum> F  <D1> <D2>
#  PDF <inpNum> S  <filename> <index>
#  NOTE: <filename> in iwrite format
#  COR <inpNum> <inpNum> <value>
#  num_fixed = <count>
#  fixed <num> = <value>
END
OUTPUT
   dimension = 1
   variable 1 Y1
END
METHOD
#  sampling = MC
#  sampling = FACT
#  sampling = LH
#  sampling = OA
#  sampling = OALH
#  sampling = MOAT
#  sampling = SOBOL
#  sampling = LPTAU
   sampling = METIS
#  sampling = FAST
#  sampling = BBD
#  sampling = PBD
#  sampling = FF4
#  sampling = FF5
#  sampling = CCI4
#  sampling = CCI5
#  sampling = CCIF
#  sampling = CCF4
#  sampling = CCF5
#  sampling = CCFF
#  sampling = CCC4
#  sampling = CCC5
#  sampling = CCCF
#  sampling = SFAST
#  sampling = UMETIS
#  sampling = GMOAT
#  sampling = GMETIS
#  sampling = SPARSEGRID
#  sampling = LSA
#  sampling = RFF4
#  sampling = RFF5
   num_samples = 90
   num_replications = 1
   num_refinements = 6
   refinement_size = 10
   reference_num_refinements = 0
   refinement_type = adaptive
#  randomize
#  randomize_more
#  an example of settings: input 1 with 3 settings
#  input_settings 1 3
#                 0.0
#                 0.5
#                 1.0
   random_seed = 541541191
END
APPLICATION
   driver = ./simulator
   opt_driver = NONE
   aux_opt_driver = NONE
   ensemble_driver = NONE
   ensemble_opt_driver = NONE
#  max_parallel_jobs = 1
#  min_job_wait_time = 1
   max_job_wait_time = 1000000
#  nondeterministic
#  launch_only
#  limited_launch_only
#  gen_inputfile_only
#  ensemble_run_mode
#  launch_interval = 1
#  save_frequency = 1000000
END
ANALYSIS
##**********************************************
## Moment - basic statistics
#  analyzer method = Moment
##==============================================
## MainEffect - raw data main effect analysis
#  analyzer method = MainEffect
##==============================================
## TwoParamEffect - raw data pairwise analysis
#  analyzer method = TwoParamEffect
##==============================================
## ANOVA - analysis of variance
#  analyzer method = ANOVA
##==============================================
## GLSA - gradient-based sensitivity analysis
#  analyzer method = GLSA
##==============================================
## RSFA - response surface analysis
#  analyzer method = RSFA
##==============================================
## MOAT - Morris screening analysis
#  analyzer method = MOAT
##==============================================
## SOBOL - Sobol' analysis on Sobol' samples
#  analyzer method = Sobol
##==============================================
## Correlation - classical correlation analysis
#  analyzer method = Correlation
##==============================================
## Integration - find area under response surface
#  analyzer method = Integration
##==============================================
## FAST - total sensitivity analysis using FAST samples
#  analyzer method = FAST
##==============================================
## FF - screening using fractional factorial samples
#  analyzer method = FF
##==============================================
## PCA - principal component analysis
#  analyzer method = PCA
##==============================================
## RSMSobol1 - response surface based main effect
#  analyzer method = RSMSobol1
##==============================================
## RSMSobol2 - response surface based pairwise effect
#  analyzer method = RSMSobol2
##==============================================
## RSMSobolTSI - response surface based total effect
#  analyzer method = RSMSobolTSI
##==============================================
## RSMSobolG - response surface based group effect
#  analyzer method = RSMSobolG
##==============================================
## ARSM - adaptive NN-based response surface analysis
#  analyzer method = ARSMNN
##==============================================
## ARSM - adaptive MARS-based response surface analysis
   analyzer method = ARSM
##==============================================
## REL - reliability analysis
#  analyzer method = REL
##==============================================
## DELTA - Delta test for parameter screening
#  analyzer method = DELTA
##==============================================
## LSA - local sensitivity analysis
#  analyzer method = LSA
##**********************************************
   analyzer output_id  = 1
##**********************************************
##RS: MARS - multivariate adaptive regression
#  analyzer rstype = MARS
##==============================================
##RS: linear - linear regression
#  analyzer rstype = linear
##==============================================
##RS: quadratic - quadratic regression
   analyzer rstype = quadratic
##==============================================
##RS: cubic - third-order polynomial
#  analyzer rstype = cubic
##==============================================
##RS: quartic - fourth-order polynomial
#  analyzer rstype = quartic
##==============================================
##RS: selective - selected polynomial order terms
#  analyzer rstype = selective_regression
##==============================================
##RS: GP1 - Gaussian process by MacKay
#  analyzer rstype = GP1
##RS: GP3 - Gaussian process by Tong
#  analyzer rstype = GP3
##==============================================
##RS: SVM - support vector machine
#  analyzer rstype = SVM
##==============================================
##RS: PWL - piecewise linear approximation
#  analyzer rstype = PWL
##==============================================
##RS: TGP - treed Gaussian process by Lee et al.
#  analyzer rstype = TGP
##==============================================
##RS: MARSBag - MARS with bagging
#  analyzer rstype = MARSBag
##==============================================
##RS: sum_of_trees based on repeated bisections
#  analyzer rstype = sum_of_trees
##==============================================
##RS: Legendre - Legendre polynomial regression
#  analyzer rstype = Legendre
##==============================================
##RS: user - user provides basis functions
#  analyzer rstype = user_regression
##==============================================
##RS: sparse_grid - only with special quadrature pts 
#  analyzer rstype = sparse_grid_regression
##==============================================
##RS: Krigining - using 2nd order correlation
#  analyzer rstype = Kriging
##==============================================
##RS: splines - splines on 2D/3D grid samples
#  analyzer rstype = splines
##==============================================
##RS: KNN - k-nearest neighbors
#  analyzer rstype = KNN
##==============================================
##RS: RBF - radial basis function
#  analyzer rstype = RBF
##==============================================
##RS: ACOSSO - Curt Storlie's ACOSSO
#  analyzer rstype = Acosso
##==============================================
##RS: BSSANOVA - Curt Storlie's BSSANOVA
#  analyzer rstype = Bssanova
##==============================================
##RS: psuade_regression - PSUADE's internal function
#  analyzer rstype = psuade_regression
##==============================================
##RS: RBFBag - RBF with bootstraps
#  analyzer rstype = RBFBag
##==============================================
##RS: PLS - partial least squares (correlated inputs)
#  analyzer rstype = PLS
##==============================================
##RS: MRBF - multiple RBF
#  analyzer rstype = MRBF
##==============================================
##RS: MGP3 - multiple GP3
#  analyzer rstype = MGP3
##==============================================
##RS: MMARS - multiple MARS
#  analyzer rstype = MMARS
##==============================================
##RS: MTGP - multiple TGP
#  analyzer rstype = MTGP
##==============================================
##RS: MNN - multi-domain Neural Network
#  analyzer rstype = MNN
##==============================================
#  analyzer rs_legendre_order = -1
#  analyzer rs_mars_num_bases = -1
#  analyzer rs_mars_interaction = -1
#  analyzer rs_num_mars = -1
#  analyzer rs_kriging_mode = -1
#  analyzer rs_kriging_tol = -1
#  analyzer opt_save_history
#  analyzer opt_use_history
#  analyzer regression_wgt_id = -1
#  graphics
#  sample_graphics
   analyzer threshold = 1.000000e-06
   rs_max_pts = 10000
##==============================================
## rs_constraint - for constrained UA/SA analysis
#  analyzer rs_constraint = psData indexFile Lbnd Ubnd
##==============================================
## moat_constraint - for constrained MOAT analysis
## analyzer moat_constraint = psData indexFile Lbnd Ubnd
##==============================================
## rs_index_file - use rs but fix some inputs
#  analyzer rs_index_file = <indexFile>
##==============================================
## rs_index_sample_file - sample for some inputs
#  analyzer rs_index_sample_file = <sampleFile>
##==============================================
## crude - optimize in raw data or rs spaces
#  optimization method = crude
##==============================================
## minpack - optimize with user provided gradients
#  optimization method = minpack
##==============================================
## sm - space mapping optimization
#  optimization method = sm
##==============================================
## mm - manifold mapping optimization
#  optimization method = mm
##==============================================
## mm - adaptive manifold mapping optimization
#  optimization method = mm_adaptive
##==============================================
## cobyla: nonlinear inequality-constrained opt
#  optimization method = cobyla
##==============================================
## bobyqa: bound-constrained optimization
#  optimization method = bobyqa
##==============================================
## lincoa: linear inequality constrained opt
#  optimization method = lincoa
##==============================================
## newuoa: unconstrained optimization
#  optimization method = newuoa
##==============================================
## lbfgs - with derivatives
#  optimization method = lbfgs
##==============================================
##  sce: genetic algorithm-type optimization
#  optimization method = sce
##==============================================
## moo - multi-objective optimization
#  optimization method = moo
##==============================================
## ouu - optimization under uncertainty
#  optimization method = ouu
##==============================================
## ouu_unconstr - ouu with no constraints 
#  optimization method = ouu_unconstr
##==============================================
## ouu_ineq_constr - ouu with inequality constraints 
#  optimization method = ouu_ineq_constr
##==============================================
## ouu_lbfgs - ouu with derivatives
#  optimization method = ouu_lbfgs
##==============================================
## nomad - mixed integer 
#  optimization method = nomad
##==============================================
## ouu - mixed integer 
#  optimization method = ouu_minlp
##==============================================
## pso - particle swarm 
#  optimization method = pso
#***********************************************
#  optimization num_starts = 0
#  optimization use_response_surface
#  optimization print_level = 0
#  optimization num_fmin = 0
#  optimization output_id = 0
#  optimization max_feval = 10000
#  optimization deltax = 1.0e-6
#  optimization fmin = not defined
#  optimization cutoff = not defined
#  optimization tolerance = not defined
   printlevel  3
#  file_write matlab
#  use_input_pdfs
#  constraint_op_and
END
END
