psuade> 
Sampling INFO: Creating a sample assuming all uncertain parameters are
               uniformly distributed.
LHSampling::current max-min distance    = 9091 (sample 1)
            each input has max distance = 4999
            number of inputs            = 20
LHSampling::current max-min distance    = 11113 (sample 2)
            each input has max distance = 4999
            number of inputs            = 20
PSUADE run: creating interface to user driver.
PSUADE run: output level = 3
PSUADE run: max parallel jobs = 1
PSUADE run: max job wait time = 1000000 seconds
PSUADE run: min job wait time = 1 seconds
PSUADE run: launch interval   = 1 seconds
PSUADE run: save frequency    = every 1000000 runs
NOTE: If evaluation should be fast but is slow, check save_frequency
      because it may be due to too much I/O.
NOTE: To dynamically change max jobs, create psuade_pmachine file
NOTE: To terminate gracefully, create psuade_stop file
======================================================================
PSUADE run: nSamples = 5000 
PSUADE run: jobs completed = 5000(out of 5000)
======================================================================
psuade> psuadeData has been renamed to simdata
psuade> load complete : nSamples = 5000
                nInputs  = 20
                nOutputs = 1
psuade> 
**********************************************************************
*     Delta Test for Variable Selection
----------------------------------------------------------------------
* This test works on random or quasi-random sample to identify inputs
* that are important in driving output variability.
* It works best for large samples (>>1000) with number of inputs up to
* maybe about 50.
----------------------------------------------------------------------
Proceed ? (y or n to abort) 
Enter output number (1 - 1) = 
No transformation (e.g. log) on sample inputs or outputs.
**********************************************************************
          Delta Test for variable selection
----------------------------------------------------------------------
This test has the characteristics that the more important a parameter
is relative to the others, the smaller the subset is at the end of the
the test (sharp zoom into the most important subset).
Thus, the purpose of this test is to identify a subset of important
parameters.
NOTE: If both nInputs and nSamples are large, this test may take a
      long time to run. So, be patient.)
======================================================================
Current best solution for output 1:
To stop the search, create a psuade_stop file in local directory.
----------------------------------------------------------------------
0 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 0 0  = 7.257603e+02
0 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0  = 7.355613e+02 (1 of 6000)
0 0 1 0 0 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0  = 7.694491e+02 (2 of 6000)
0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0  = 7.264404e+02 (3 of 6000)
0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 1 0  = 7.429331e+02 (4 of 6000)
0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 0 1 1 0 0  = 8.626140e+02 (5 of 6000)
0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0  = 7.330357e+02 (6 of 6000)
0 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 1 1 0 0  = 7.439477e+02 (7 of 6000)
0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 0  = 7.339487e+02 (8 of 6000)
0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 1  = 7.188101e+02 (9 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 1 0 1  = 5.992404e+02 (10 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 1 0 1 1 0 1  = 6.135830e+02 (11 of 6000)
0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 1 1 0 1  = 6.446930e+02 (12 of 6000)
0 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 0 1  = 6.377749e+02 (13 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 1  = 6.184761e+02 (14 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 0 1  = 5.854864e+02 (15 of 6000)
0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1  = 6.230284e+02 (16 of 6000)
0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 0 0 1  = 6.187441e+02 (17 of 6000)
0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 1  = 6.961733e+02 (18 of 6000)
0 0 1 1 0 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1  = 6.013700e+02 (19 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.720606e+02 (20 of 6000)
0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1  = 6.896025e+02 (21 of 6000)
0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 6.097093e+02 (22 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1  = 5.794036e+02 (23 of 6000)
0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1  = 6.078578e+02 (24 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1  = 5.929009e+02 (25 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 1  = 5.785887e+02 (26 of 6000)
0 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1  = 5.794036e+02 (27 of 6000)
0 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 6.044336e+02 (28 of 6000)
0 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.618660e+02 (29 of 6000)
0 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.807430e+02 (30 of 6000)
0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.722008e+02 (31 of 6000)
0 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.919639e+02 (32 of 6000)
0 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.919639e+02 (33 of 6000)
0 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 1  = 6.824325e+02 (34 of 6000)
0 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.919639e+02 (35 of 6000)
0 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1  = 5.807430e+02 (36 of 6000)
0 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 1  = 5.623494e+02 (37 of 6000)
0 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 1  = 6.824325e+02 (38 of 6000)
0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 1  = 5.648781e+02 (39 of 6000)
1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 4.529639e+02 (40 of 6000)
1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1  = 4.922446e+02 (41 of 6000)
1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1  = 4.682417e+02 (42 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 3.037863e+02 (43 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.712171e+02 (44 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0  = 2.999908e+02 (45 of 6000)
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0  = 3.008487e+02 (46 of 6000)
1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.060194e+02 (47 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0  = 2.961513e+02 (48 of 6000)
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.382488e+02 (49 of 6000)
1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.147663e+02 (50 of 6000)
1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.117634e+02 (51 of 6000)
1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.147663e+02 (52 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0  = 3.046456e+02 (53 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0  = 2.961513e+02 (54 of 6000)
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0  = 3.008487e+02 (55 of 6000)
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.382488e+02 (56 of 6000)
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0  = 3.008487e+02 (57 of 6000)
1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.899103e+02 (58 of 6000)
1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0  = 3.703366e+02 (59 of 6000)
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.382488e+02 (60 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0  = 3.035472e+02 (61 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0  = 3.035472e+02 (62 of 6000)
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.382488e+02 (63 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0  = 2.999908e+02 (64 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (65 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 3.037863e+02 (66 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 3.037863e+02 (67 of 6000)
1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0  = 3.069628e+02 (68 of 6000)
1 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.314432e+02 (69 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (70 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (71 of 6000)
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.382488e+02 (72 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0  = 3.019501e+02 (73 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (74 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0  = 3.008619e+02 (75 of 6000)
1 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.314432e+02 (76 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0  = 2.999908e+02 (77 of 6000)
1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.117634e+02 (78 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0  = 3.035472e+02 (79 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0  = 2.961513e+02 (80 of 6000)
1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.147663e+02 (81 of 6000)
1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.060194e+02 (82 of 6000)
1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.899103e+02 (83 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0  = 3.029222e+02 (84 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0  = 2.961513e+02 (85 of 6000)
1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.060194e+02 (86 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (87 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 3.037863e+02 (88 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0  = 3.035472e+02 (89 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (90 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0  = 3.035472e+02 (91 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0  = 3.008619e+02 (92 of 6000)
1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0  = 3.796544e+02 (93 of 6000)
1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.899103e+02 (94 of 6000)
1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0  = 3.703366e+02 (95 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0  = 2.961513e+02 (96 of 6000)
1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.360260e+02 (97 of 6000)
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0  = 3.008487e+02 (98 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0  = 2.999908e+02 (99 of 6000)
1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.899103e+02 (100 of 6000)
1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.060194e+02 (101 of 6000)
1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.060194e+02 (102 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0  = 3.019501e+02 (103 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0  = 3.029222e+02 (104 of 6000)
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.382488e+02 (105 of 6000)
1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.360260e+02 (106 of 6000)
1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.117634e+02 (107 of 6000)
1 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.314432e+02 (108 of 6000)
1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.147663e+02 (109 of 6000)
1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.060194e+02 (110 of 6000)
1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.899103e+02 (111 of 6000)
1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0  = 3.762203e+02 (112 of 6000)
1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0  = 3.703366e+02 (113 of 6000)
1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0  = 3.796544e+02 (114 of 6000)
1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0  = 3.069628e+02 (115 of 6000)
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0  = 3.008487e+02 (116 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0  = 3.029222e+02 (117 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0  = 3.008619e+02 (118 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0  = 2.999908e+02 (119 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0  = 3.046456e+02 (120 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0  = 2.961513e+02 (121 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0  = 3.019501e+02 (122 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0  = 3.035472e+02 (123 of 6000)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1  = 3.037863e+02 (124 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 1 0 0  = 6.282975e+02 (125 of 6000)
1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0  = 6.219853e+02 (126 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 1 0 0  = 6.282975e+02 (127 of 6000)
1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 1 0 1 0 0  = 4.931835e+02 (128 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0  = 6.150082e+02 (129 of 6000)
1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0  = 5.847649e+02 (130 of 6000)
1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0  = 7.260202e+02 (131 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1  = 6.157903e+02 (132 of 6000)
1 1 1 0 1 1 0 1 1 0 0 1 0 0 0 1 0 1 0 0  = 6.308157e+02 (133 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 0  = 6.285184e+02 (134 of 6000)
1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.451300e+02 (135 of 6000)
1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 4.443724e+02 (136 of 6000)
1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0  = 6.219853e+02 (137 of 6000)
1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.509516e+02 (138 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 0  = 5.862215e+02 (139 of 6000)
1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.509516e+02 (140 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 0  = 5.862215e+02 (141 of 6000)
1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.451300e+02 (142 of 6000)
1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.509516e+02 (143 of 6000)
1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 7.446643e+02 (144 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 0  = 5.862215e+02 (145 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 0  = 6.285184e+02 (146 of 6000)
1 1 1 0 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0  = 7.340821e+02 (147 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0  = 5.784286e+02 (148 of 6000)
1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0  = 5.847649e+02 (149 of 6000)
1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 4.443724e+02 (150 of 6000)
0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 7.255997e+02 (151 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 0  = 6.285184e+02 (152 of 6000)
1 1 1 0 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0  = 7.340821e+02 (153 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (154 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1  = 6.157903e+02 (155 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0  = 6.150082e+02 (156 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (157 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 0  = 6.285184e+02 (158 of 6000)
0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 7.255997e+02 (159 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 0  = 5.862215e+02 (160 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (161 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1  = 6.157903e+02 (162 of 6000)
1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0  = 5.847649e+02 (163 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1  = 6.157903e+02 (164 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (165 of 6000)
1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.451300e+02 (166 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (167 of 6000)
0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 7.255997e+02 (168 of 6000)
1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 1 0 1 0 0  = 4.931835e+02 (169 of 6000)
1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.509516e+02 (170 of 6000)
1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0  = 5.847649e+02 (171 of 6000)
1 1 1 0 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.470401e+02 (172 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 0  = 6.285184e+02 (173 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 0  = 5.862215e+02 (174 of 6000)
1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0  = 6.219853e+02 (175 of 6000)
1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 4.443724e+02 (176 of 6000)
1 1 1 0 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.470401e+02 (177 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (178 of 6000)
1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0  = 6.219853e+02 (179 of 6000)
1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0  = 6.219853e+02 (180 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 0 0  = 6.176911e+02 (181 of 6000)
1 1 1 0 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.470401e+02 (182 of 6000)
1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0  = 7.260202e+02 (183 of 6000)
1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0  = 5.847649e+02 (184 of 6000)
0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 7.255997e+02 (185 of 6000)
1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 7.446643e+02 (186 of 6000)
1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.509516e+02 (187 of 6000)
1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 4.443724e+02 (188 of 6000)
1 1 1 0 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.470401e+02 (189 of 6000)
1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0  = 6.451300e+02 (190 of 6000)
1 1 1 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0  = 5.847649e+02 (191 of 6000)
1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0  = 7.260202e+02 (192 of 6000)
1 1 1 0 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0  = 7.340821e+02 (193 of 6000)
1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 1 0 1 0 0  = 4.931835e+02 (194 of 6000)
1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0  = 6.219853e+02 (195 of 6000)
1 1 1 0 1 1 0 1 1 0 0 1 0 0 0 1 0 1 0 0  = 6.308157e+02 (196 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0  = 6.150082e+02 (197 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 0 0  = 6.176911e+02 (198 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 0  = 6.227120e+02 (199 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0  = 5.784286e+02 (200 of 6000)
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 1 0 0  = 6.282975e+02 (201 of 6000)
psuade_stop file found ==> terminate.
To restart, delete psuade_stop first.
**********************************************************************
Final Selections (based on 3 neighbors) = 
(The top is the best and then the next few best.)
----------------------------------------------------------------------
Rank  1 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 : delta =  2.7122e+02
Rank  2 => 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 : delta =  2.8991e+02
Rank  3 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 : delta =  2.9615e+02
Rank  4 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 : delta =  2.9999e+02
Rank  5 => 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 : delta =  3.0085e+02
Rank  6 => 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0 : delta =  3.0086e+02
Rank  7 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 : delta =  3.0195e+02
Rank  8 => 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 : delta =  3.0292e+02
Rank  9 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 : delta =  3.0355e+02
Rank 10 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 : delta =  3.0379e+02
----------------------------------------------------------------------
Delta test ranking is now in matlabdelta.m.
Order of importance (based on frequencies of appearance in search)
(D)Rank    1 : input    9 (score = 97 )
(D)Rank    2 : input    3 (score = 95 )
(D)Rank    3 : input    6 (score = 93 )
(D)Rank    4 : input    8 (score = 91 )
(D)Rank    5 : input    5 (score = 86 )
(D)Rank    6 : input    2 (score = 83 )
(D)Rank    7 : input    1 (score = 81 )
(D)Rank    8 : input   10 (score = 71 )
(D)Rank    9 : input    4 (score = 70 )
(D)Rank   10 : input    7 (score = 68 )
(D)Rank   11 : input   18 (score = 33 )
(D)Rank   12 : input   16 (score = 29 )
(D)Rank   13 : input   20 (score = 18 )
(D)Rank   14 : input   17 (score = 11 )
(D)Rank   15 : input   19 (score = 8 )
(D)Rank   16 : input   15 (score = 7 )
(D)Rank   17 : input   12 (score = 5 )
(D)Rank   18 : input   11 (score = 3 )
(D)Rank   19 : input   14 (score = 3 )
(D)Rank   20 : input   13 (score = 3 )
**********************************************************************
Final test adding the most important parameters incrementally:
You should see the rightmost values decreasing and then increasing.
The lowest point can be used as a separator for classifying important
and less important parameters.
----------------------------------------------------------------------
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  = 1.159802e+03
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0  = 1.010435e+03
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0  = 9.756792e+02
0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0  = 9.418898e+02
0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 8.002379e+02
0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 7.671971e+02
0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 6.977542e+02
1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 5.596552e+02
1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.499459e+02
1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.899103e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 2.712171e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0  = 3.019501e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0  = 3.321370e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 1  = 3.535086e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 0 1  = 3.803737e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 1 1  = 4.030356e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1  = 4.141230e+02
1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1  = 4.286369e+02
1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1  = 4.498225e+02
1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1  = 4.563187e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1  = 4.668001e+02
**********************************************************************
AnalysisManager: analysis metric = 2.71e+02
psuade> 
**********************************************************************
This command performs COARSE global sensitivity analysis based on the
result of training the loaded sample with the sum-of-trees model (the
number of splittings). The sample may be any space-filling design.
----------------------------------------------------------------------
Proceed ? (y or n to abort) 
Enter output number (1 - 1) = SumOfTrees: initializing trees.
SumOfTrees: building 100 trees.
Sum-of-trees ranking is now in matlabsot.m.
**********************************************************************
* SumOfTrees screening rankings (with bootstrapping)
* Minimum points per node = 10
**********************************************************************
*  Rank   1 : Input =   8 (score = 100.0)
*  Rank   2 : Input =   9 (score = 99.5)
*  Rank   3 : Input =  10 (score = 99.4)
*  Rank   4 : Input =   7 (score = 66.0)
*  Rank   5 : Input =   3 (score = 19.7)
*  Rank   6 : Input =   5 (score = 16.2)
*  Rank   7 : Input =   4 (score = 16.1)
*  Rank   8 : Input =   2 (score = 14.1)
*  Rank   9 : Input =   1 (score = 13.3)
*  Rank  10 : Input =   6 (score = 10.2)
*  Rank  11 : Input =  11 (score =  8.3)
*  Rank  12 : Input =  13 (score =  6.3)
*  Rank  13 : Input =  20 (score =  6.2)
*  Rank  14 : Input =  12 (score =  5.7)
*  Rank  15 : Input =  16 (score =  5.6)
*  Rank  16 : Input =  15 (score =  5.5)
*  Rank  17 : Input =  17 (score =  5.4)
*  Rank  18 : Input =  14 (score =  5.2)
*  Rank  19 : Input =  18 (score =  4.9)
*  Rank  20 : Input =  19 (score =  4.1)
**********************************************************************
sot_sa score (sum of all std dev) = 5.061665e+03
psuade> 
**********************************************************************
This command performs COARSE global sensitivity analysis based on the
result of training the loaded sample with the MARS response surface.
The loaded sample may be any space-filling design.
----------------------------------------------------------------------
Proceed ? (y or n to abort) 
Enter output number (1 - 1) = 
MARS (0) or MARS with bagging (1) ? 
**********************************************************************
*           MARS Model
* Default number of basis functions = 100
* Default degree of interactions    = 8
======================================================================
Mars: nBasis,maxVarPerBasis,nSamples = 100 8 5000
Entering Mars (process)
If it crashes here, it is mars_process problem.
One way to solve the problem is to use different nSamples.
Returned from Mars (process).
Mars ranking is now in matlabmarsa.m.
**********************************************************************
* Mars screening rankings 
**********************************************************************
*  Rank   1 : Input =   2 (score = 100.0)
*  Rank   2 : Input =   4 (score = 98.0)
*  Rank   3 : Input =   1 (score = 95.6)
*  Rank   4 : Input =   3 (score = 87.4)
*  Rank   5 : Input =   9 (score = 78.1)
*  Rank   6 : Input =   8 (score = 76.8)
*  Rank   7 : Input =  10 (score = 75.8)
*  Rank   8 : Input =   6 (score = 68.1)
*  Rank   9 : Input =   5 (score = 67.8)
*  Rank  10 : Input =   7 (score = 51.9)
*  Rank  11 : Input =  15 (score =  7.9)
*  Rank  12 : Input =  16 (score =  7.2)
*  Rank  13 : Input =  13 (score =  6.6)
*  Rank  14 : Input =  14 (score =  6.6)
*  Rank  15 : Input =  17 (score =  0.0)
*  Rank  16 : Input =  18 (score =  0.0)
*  Rank  17 : Input =  12 (score =  0.0)
*  Rank  18 : Input =  11 (score =  0.0)
*  Rank  19 : Input =  19 (score =  0.0)
*  Rank  20 : Input =  20 (score =  0.0)
**********************************************************************

