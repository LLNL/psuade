***************************************************************
The following simple problem is used to show how to perform
Morris screening analysis with inequality constraints.

Y = X1 + X2 + X3 + ... X20

subject to 0 <= X1 + X2 <= 1

X1, X2, .., X20 = [0, 1]

***************************************************************
The idea is to create a MOAT 'repair file' and use the it to 
inform the MOAT sample generator about the constraints so that
the result is a modified MOAT sample that obeys the constraints.

The steps are:

1. Create a sample expressing the constraints (X1+X2).
   The constraint relationship is given in genConstraint.c

   A. cc -o genConstraint genConstraint.c -lm

   B. psuade psuadeGenConstraint.in

2. Create a Morris sample JUST FOR X1 and X2 that obeys 
   the constraint

   psuade
   > load constrData
   > moatgen
     1   < choose linear regression >
     0   < lower bound for constraint = 0 >
     1   < upper bound for constraint = 1 >
     8   < resolution: use numbers >= 6 >
     200 < just use a large number >
   > quit
 
   At the end a file MOAT_adjust_file is generated.

   Next, go into the MOAT_adjust_file and change
   the variable indices on line 3. In this case,
   since the variables are 1 and 2, so no change is
   needed.

3. Create a Morris sample for ALL 20 inputs (which
   does not have the constraint embedded yet)

   psuade psuadeGMOAT.in

   mv psuadeData gmoatSample

4. Adjust the Morris sample (based on the constraint
   for the first inputs in MOAT_adjust_file)

   psuade
   > load gmoatSample
   > gmoat_adjust MOAT_adjust_file
   > write gmoatSample.adjusted
   > quit

   Now gmoatSample.adjusted is ready to be run.

5. run simulations on the modified GMOAT sample

   cc -o simulator simulator.c -lm

   Open up gmoatSample.adjusted, and change the 
       driver to point to simulator.

   Now do: psuade gmoatSample.adjusted
 
   mv psuadeData gmoatSample.adjusted.done

6. Perform analysis

   Open up gmoatSample.adjusted.done.
   Change the line moat_constraint to:
     analyzer moat_constraint = constrData indexFile 0 1

   Now start psuade in command line mode:

   psuade
   > load gmoatSample.adjusted.done
   > moat

   * Compare the result with the scenario when the 
     'analyzer moat_constraint' (for the first 2
     inputs) is not used 

NOTE: Step 1-5 have been captured by psScript.in
   
